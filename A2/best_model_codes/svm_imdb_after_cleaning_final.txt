svm starts
Best params: {'svm__C': 10, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 2), 'vect__strip_accents': 'unicode'}
Validation results: {'mean_fit_time': array([ 3.19417281, 21.87808962, 17.32629275,  4.6441442 , 36.90109978,
       32.58796678,  5.88803301, 46.39167094, 40.94918523,  9.17615266,
       79.99345779, 88.17398233]), 'std_fit_time': array([ 0.27801789,  0.86959229,  0.17104833,  0.31510129,  8.02834951,
        3.85688845,  1.38217173, 12.65481587,  7.47008093,  2.51481737,
       26.61027443, 12.43415873]), 'mean_score_time': array([0.82232952, 2.2003417 , 1.57889686, 0.88349457, 2.70205531,
       1.75739408, 1.02501431, 2.64908538, 1.79097638, 1.12535672,
       4.2733562 , 2.58711982]), 'std_score_time': array([0.04347035, 0.20557301, 0.06048071, 0.07378461, 0.21718418,
       0.1068549 , 0.11059771, 0.26551996, 0.10361641, 0.07016783,
       1.25113667, 0.60756206]), 'param_svm__C': masked_array(data=[0.15, 0.15, 0.15, 0.77, 0.77, 0.77, 1, 1, 1, 10, 10,
                   10],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_svm__loss': masked_array(data=['hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge',
                   'hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_svm__max_iter': masked_array(data=[5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000,
                   5000, 5000, 5000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_svm__multi_class': masked_array(data=['ovr', 'ovr', 'ovr', 'ovr', 'ovr', 'ovr', 'ovr', 'ovr',
                   'ovr', 'ovr', 'ovr', 'ovr'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_svm__penalty': masked_array(data=['l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2', 'l2',
                   'l2', 'l2', 'l2'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__analyzer': masked_array(data=['word', 'word', 'word', 'word', 'word', 'word', 'word',
                   'word', 'word', 'word', 'word', 'word'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__binary': masked_array(data=[True, True, True, True, True, True, True, True, True,
                   True, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__ngram_range': masked_array(data=[(1, 1), (1, 2), (2, 2), (1, 1), (1, 2), (2, 2), (1, 1),
                   (1, 2), (2, 2), (1, 1), (1, 2), (2, 2)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__strip_accents': masked_array(data=['unicode', 'unicode', 'unicode', 'unicode', 'unicode',
                   'unicode', 'unicode', 'unicode', 'unicode', 'unicode',
                   'unicode', 'unicode'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'svm__C': 0.15, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 1), 'vect__strip_accents': 'unicode'}, {'svm__C': 0.15, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 0.15, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (2, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 0.77, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 1), 'vect__strip_accents': 'unicode'}, {'svm__C': 0.77, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 0.77, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (2, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 1, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 1), 'vect__strip_accents': 'unicode'}, {'svm__C': 1, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 1, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (2, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 10, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 1), 'vect__strip_accents': 'unicode'}, {'svm__C': 10, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (1, 2), 'vect__strip_accents': 'unicode'}, {'svm__C': 10, 'svm__loss': 'hinge', 'svm__max_iter': 5000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2', 'vect__analyzer': 'word', 'vect__binary': True, 'vect__ngram_range': (2, 2), 'vect__strip_accents': 'unicode'}], 'split0_test_score': array([0.8806, 0.8704, 0.7008, 0.889 , 0.8984, 0.8712, 0.8852, 0.8976,
       0.8758, 0.8594, 0.899 , 0.8764]), 'split1_test_score': array([0.8826, 0.8696, 0.7278, 0.8944, 0.896 , 0.8604, 0.8934, 0.8984,
       0.8664, 0.8654, 0.8996, 0.8654]), 'split2_test_score': array([0.8888, 0.8806, 0.734 , 0.8956, 0.9036, 0.8774, 0.8958, 0.9048,
       0.8768, 0.8704, 0.9054, 0.8786]), 'split3_test_score': array([0.8756, 0.8652, 0.6916, 0.8896, 0.8934, 0.8592, 0.8906, 0.8954,
       0.8656, 0.869 , 0.8964, 0.867 ]), 'split4_test_score': array([0.8826, 0.873 , 0.7198, 0.8856, 0.8938, 0.8572, 0.8866, 0.8946,
       0.8624, 0.8616, 0.8968, 0.8652]), 'mean_test_score': array([0.88204, 0.87176, 0.7148 , 0.89084, 0.89704, 0.86508, 0.89032,
       0.89816, 0.8694 , 0.86516, 0.89944, 0.87052]), 'std_test_score': array([0.00423962, 0.00508394, 0.01610515, 0.00368   , 0.00373395,
       0.00784612, 0.00399119, 0.00359867, 0.00579931, 0.0041979 ,
       0.00322341, 0.00577526]), 'rank_test_score': array([ 6,  7, 12,  4,  3, 11,  5,  2,  9, 10,  1,  8])}
Test accuracy: 0.89736
Classification report:               precision    recall  f1-score   support

           0       0.90      0.89      0.90     12500
           1       0.89      0.90      0.90     12500

    accuracy                           0.90     25000
   macro avg       0.90      0.90      0.90     25000
weighted avg       0.90      0.90      0.90     25000

Running time: 361.03654885292053
