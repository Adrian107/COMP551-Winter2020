rf starts
Best params: {'rf__max_depth': 500, 'rf__max_features': 10, 'rf__n_estimators': 500, 'rf__n_jobs': 11}
Validation results: {'mean_fit_time': array([44.38182139]), 'std_fit_time': array([1.95475456]), 'mean_score_time': array([2.58772001]), 'std_score_time': array([1.4323377]), 'param_rf__max_depth': masked_array(data=[500],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_rf__max_features': masked_array(data=[10],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_rf__n_estimators': masked_array(data=[500],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_rf__n_jobs': masked_array(data=[11],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'rf__max_depth': 500, 'rf__max_features': 10, 'rf__n_estimators': 500, 'rf__n_jobs': 11}], 'split0_test_score': array([0.73486522]), 'split1_test_score': array([0.72249227]), 'split2_test_score': array([0.74237738]), 'split3_test_score': array([0.73442333]), 'split4_test_score': array([0.72767462]), 'mean_test_score': array([0.73236656]), 'std_test_score': array([0.00678537]), 'rank_test_score': array([1]), 'split0_train_score': array([0.97248923]), 'split1_train_score': array([0.97359408]), 'split2_train_score': array([0.97248923]), 'split3_train_score': array([0.97094244]), 'split4_train_score': array([0.97260274]), 'mean_train_score': array([0.97242354]), 'std_train_score': array([0.00084907])}
Test accuracy: 0.6752522570366436
Classification report:               precision    recall  f1-score   support

           0       0.53      0.38      0.44       319
           1       0.59      0.65      0.62       389
           2       0.59      0.62      0.61       394
           3       0.64      0.65      0.65       392
           4       0.67      0.68      0.67       385
           5       0.73      0.72      0.73       395
           6       0.75      0.80      0.77       390
           7       0.71      0.70      0.70       396
           8       0.60      0.79      0.68       398
           9       0.48      0.90      0.63       397
          10       0.86      0.88      0.87       399
          11       0.84      0.71      0.77       396
          12       0.69      0.53      0.60       393
          13       0.86      0.71      0.78       396
          14       0.81      0.70      0.75       394
          15       0.58      0.82      0.68       398
          16       0.61      0.68      0.64       364
          17       0.86      0.78      0.82       376
          18       0.85      0.36      0.51       310
          19       0.57      0.10      0.18       251

    accuracy                           0.68      7532
   macro avg       0.69      0.66      0.65      7532
weighted avg       0.69      0.68      0.67      7532

Running time: 71.53761601448059
-----------------------------------------
dt starts
Best params: {'dt__max_features': 'auto', 'dt__splitter': 'best'}
Validation results: {'mean_fit_time': array([1.37741137]), 'std_fit_time': array([0.03055264]), 'mean_score_time': array([0.20628681]), 'std_score_time': array([0.01163221]), 'param_dt__max_features': masked_array(data=['auto'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_dt__splitter': masked_array(data=['best'],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'dt__max_features': 'auto', 'dt__splitter': 'best'}], 'split0_test_score': array([0.32611578]), 'split1_test_score': array([0.37825895]), 'split2_test_score': array([0.36323464]), 'split3_test_score': array([0.36456032]), 'split4_test_score': array([0.37267905]), 'mean_test_score': array([0.36096975]), 'std_test_score': array([0.01826935]), 'rank_test_score': array([1]), 'split0_train_score': array([0.97458844]), 'split1_train_score': array([0.97436747]), 'split2_train_score': array([0.97359408]), 'split3_train_score': array([0.97370456]), 'split4_train_score': array([0.97414936]), 'mean_train_score': array([0.97408078]), 'std_train_score': array([0.00038027])}
Test accuracy: 0.3362984599044079
Classification report:               precision    recall  f1-score   support

           0       0.23      0.21      0.22       319
           1       0.25      0.24      0.24       389
           2       0.23      0.29      0.26       394
           3       0.28      0.27      0.28       392
           4       0.26      0.29      0.27       385
           5       0.35      0.31      0.33       395
           6       0.47      0.41      0.44       390
           7       0.18      0.37      0.24       396
           8       0.37      0.39      0.38       398
           9       0.44      0.42      0.43       397
          10       0.50      0.48      0.49       399
          11       0.55      0.40      0.46       396
          12       0.28      0.24      0.26       393
          13       0.43      0.35      0.39       396
          14       0.42      0.43      0.42       394
          15       0.43      0.43      0.43       398
          16       0.31      0.31      0.31       364
          17       0.56      0.46      0.50       376
          18       0.19      0.18      0.18       310
          19       0.15      0.10      0.12       251

    accuracy                           0.34      7532
   macro avg       0.34      0.33      0.33      7532
weighted avg       0.35      0.34      0.34      7532

Running time: 6.730121374130249
-----------------------------------------
svm starts
Best params: {'svm__C': 0.1, 'svm__loss': 'hinge', 'svm__max_iter': 2000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2'}
Validation results: {'mean_fit_time': array([3.63012471]), 'std_fit_time': array([0.23023712]), 'mean_score_time': array([0.21707597]), 'std_score_time': array([0.03175232]), 'param_svm__C': masked_array(data=[0.1],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_svm__loss': masked_array(data=['hinge'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_svm__max_iter': masked_array(data=[2000],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_svm__multi_class': masked_array(data=['ovr'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_svm__penalty': masked_array(data=['l2'],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'svm__C': 0.1, 'svm__loss': 'hinge', 'svm__max_iter': 2000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l2'}], 'split0_test_score': array([0.74768007]), 'split1_test_score': array([0.73928414]), 'split2_test_score': array([0.73928414]), 'split3_test_score': array([0.74812196]), 'split4_test_score': array([0.74535809]), 'mean_test_score': array([0.74394568]), 'std_test_score': array([0.00392025]), 'rank_test_score': array([1]), 'split0_train_score': array([0.96144072]), 'split1_train_score': array([0.95945199]), 'split2_train_score': array([0.95956248]), 'split3_train_score': array([0.95967296]), 'split4_train_score': array([0.95901458]), 'mean_train_score': array([0.95982855]), 'std_train_score': array([0.00083647])}
Test accuracy: 0.6765799256505576
Classification report:               precision    recall  f1-score   support

           0       0.53      0.49      0.51       319
           1       0.66      0.68      0.67       389
           2       0.59      0.61      0.60       394
           3       0.64      0.61      0.63       392
           4       0.69      0.71      0.70       385
           5       0.78      0.70      0.74       395
           6       0.72      0.78      0.75       390
           7       0.73      0.68      0.70       396
           8       0.81      0.67      0.73       398
           9       0.87      0.81      0.84       397
          10       0.86      0.89      0.88       399
          11       0.81      0.71      0.76       396
          12       0.62      0.53      0.57       393
          13       0.75      0.76      0.76       396
          14       0.74      0.75      0.74       394
          15       0.60      0.80      0.69       398
          16       0.56      0.67      0.61       364
          17       0.50      0.75      0.60       376
          18       0.53      0.45      0.49       310
          19       0.43      0.23      0.30       251

    accuracy                           0.68      7532
   macro avg       0.67      0.66      0.66      7532
weighted avg       0.68      0.68      0.67      7532

Running time: 9.720471143722534
-----------------------------------------
logistic starts
Best params: {'logistic__C': 1, 'logistic__max_iter': 500, 'logistic__n_jobs': -1, 'logistic__penalty': 'l2', 'logistic__solver': 'sag'}
Validation results: {'mean_fit_time': array([41.08830485]), 'std_fit_time': array([0.42575704]), 'mean_score_time': array([0.22187896]), 'std_score_time': array([0.03213095]), 'param_logistic__C': masked_array(data=[1],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_logistic__max_iter': masked_array(data=[500],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_logistic__n_jobs': masked_array(data=[-1],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_logistic__penalty': masked_array(data=['l2'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_logistic__solver': masked_array(data=['sag'],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'logistic__C': 1, 'logistic__max_iter': 500, 'logistic__n_jobs': -1, 'logistic__penalty': 'l2', 'logistic__solver': 'sag'}], 'split0_test_score': array([0.73751657]), 'split1_test_score': array([0.73442333]), 'split2_test_score': array([0.73486522]), 'split3_test_score': array([0.73442333]), 'split4_test_score': array([0.74668435]), 'mean_test_score': array([0.73758256]), 'std_test_score': array([0.00469451]), 'rank_test_score': array([1]), 'split0_train_score': array([0.9682908]), 'split1_train_score': array([0.96862225]), 'split2_train_score': array([0.96773837]), 'split3_train_score': array([0.96652304]), 'split4_train_score': array([0.96818383]), 'mean_train_score': array([0.96787166]), 'std_train_score': array([0.00073117])}
Test accuracy: 0.670339883165162
Classification report:               precision    recall  f1-score   support

           0       0.49      0.50      0.50       319
           1       0.63      0.69      0.66       389
           2       0.58      0.58      0.58       394
           3       0.60      0.65      0.63       392
           4       0.69      0.68      0.68       385
           5       0.78      0.69      0.73       395
           6       0.77      0.75      0.76       390
           7       0.72      0.68      0.70       396
           8       0.73      0.71      0.72       398
           9       0.54      0.84      0.66       397
          10       0.89      0.85      0.87       399
          11       0.83      0.67      0.75       396
          12       0.58      0.59      0.58       393
          13       0.78      0.74      0.76       396
          14       0.74      0.72      0.73       394
          15       0.65      0.78      0.71       398
          16       0.56      0.64      0.60       364
          17       0.83      0.71      0.77       376
          18       0.55      0.45      0.50       310
          19       0.40      0.25      0.30       251

    accuracy                           0.67      7532
   macro avg       0.67      0.66      0.66      7532
weighted avg       0.68      0.67      0.67      7532

Running time: 83.22837781906128
-----------------------------------------
knn starts
Best params: {'knn__algorithm': 'auto', 'knn__n_jobs': -1, 'knn__n_neighbors': 5, 'knn__weights': 'distance'}
Validation results: {'mean_fit_time': array([1.03280373]), 'std_fit_time': array([0.0829793]), 'mean_score_time': array([1.04800029]), 'std_score_time': array([0.07694846]), 'param_knn__algorithm': masked_array(data=['auto'],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_knn__n_jobs': masked_array(data=[-1],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_knn__n_neighbors': masked_array(data=[5],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_knn__weights': masked_array(data=['distance'],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'knn__algorithm': 'auto', 'knn__n_jobs': -1, 'knn__n_neighbors': 5, 'knn__weights': 'distance'}], 'split0_test_score': array([0.11886876]), 'split1_test_score': array([0.14140521]), 'split2_test_score': array([0.11444985]), 'split3_test_score': array([0.13566063]), 'split4_test_score': array([0.12201592]), 'mean_test_score': array([0.12648007]), 'std_test_score': array([0.01029203]), 'rank_test_score': array([1]), 'split0_train_score': array([0.9741465]), 'split1_train_score': array([0.97337311]), 'split2_train_score': array([0.97171583]), 'split3_train_score': array([0.97282068]), 'split4_train_score': array([0.97381794]), 'mean_train_score': array([0.97317481]), 'std_train_score': array([0.00085453])}
Test accuracy: 0.09346787041954328
Classification report:               precision    recall  f1-score   support

           0       0.06      0.18      0.08       319
           1       0.07      0.18      0.10       389
           2       0.07      0.24      0.10       394
           3       0.08      0.07      0.08       392
           4       0.07      0.10      0.08       385
           5       0.31      0.09      0.13       395
           6       0.23      0.12      0.16       390
           7       0.07      0.13      0.09       396
           8       0.11      0.06      0.08       398
           9       0.09      0.10      0.10       397
          10       0.25      0.11      0.15       399
          11       0.14      0.05      0.07       396
          12       0.14      0.05      0.07       393
          13       0.11      0.05      0.07       396
          14       0.18      0.07      0.10       394
          15       0.22      0.04      0.07       398
          16       0.09      0.02      0.04       364
          17       0.20      0.11      0.14       376
          18       0.16      0.07      0.10       310
          19       0.03      0.02      0.03       251

    accuracy                           0.09      7532
   macro avg       0.13      0.09      0.09      7532
weighted avg       0.14      0.09      0.09      7532

Running time: 15.181347370147705
-----------------------------------------
ada starts
Best params: {'ada__base_estimator': DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=None, splitter='best'), 'ada__learning_rate': 0.1, 'ada__n_estimators': 1000}
Validation results: {'mean_fit_time': array([215.93912549]), 'std_fit_time': array([15.13594826]), 'mean_score_time': array([2.00525184]), 'std_score_time': array([0.06596609]), 'param_ada__base_estimator': masked_array(data=[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=None, splitter='best')],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_ada__learning_rate': masked_array(data=[0.1],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_ada__n_estimators': masked_array(data=[1000],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'ada__base_estimator': DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=None, splitter='best'), 'ada__learning_rate': 0.1, 'ada__n_estimators': 1000}], 'split0_test_score': array([0.49491825]), 'split1_test_score': array([0.50022095]), 'split2_test_score': array([0.5125939]), 'split3_test_score': array([0.51657092]), 'split4_test_score': array([0.51458886]), 'mean_test_score': array([0.50777858]), 'std_test_score': array([0.0085951]), 'rank_test_score': array([1]), 'split0_train_score': array([0.97458844]), 'split1_train_score': array([0.97436747]), 'split2_train_score': array([0.97359408]), 'split3_train_score': array([0.97370456]), 'split4_train_score': array([0.97414936]), 'mean_train_score': array([0.97408078]), 'std_train_score': array([0.00038027])}
Test accuracy: 0.47623473181094
Classification report:               precision    recall  f1-score   support

           0       0.33      0.32      0.32       319
           1       0.41      0.46      0.44       389
           2       0.43      0.44      0.44       394
           3       0.41      0.42      0.42       392
           4       0.47      0.47      0.47       385
           5       0.57      0.45      0.50       395
           6       0.60      0.56      0.58       390
           7       0.33      0.56      0.41       396
           8       0.62      0.57      0.60       398
           9       0.61      0.58      0.60       397
          10       0.68      0.67      0.68       399
          11       0.64      0.51      0.56       396
          12       0.33      0.35      0.34       393
          13       0.51      0.53      0.52       396
          14       0.53      0.52      0.52       394
          15       0.50      0.50      0.50       398
          16       0.41      0.44      0.43       364
          17       0.69      0.58      0.63       376
          18       0.32      0.26      0.29       310
          19       0.17      0.15      0.16       251

    accuracy                           0.48      7532
   macro avg       0.48      0.47      0.47      7532
weighted avg       0.49      0.48      0.48      7532

Running time: 589.5548720359802
-----------------------------------------
nb starts
Best params: {'nb__alpha': 1.0, 'nb__fit_prior': False}
Validation results: {'mean_fit_time': array([1.02421494]), 'std_fit_time': array([0.04382664]), 'mean_score_time': array([0.19129114]), 'std_score_time': array([0.01815181]), 'param_nb__alpha': masked_array(data=[1.0],
             mask=[False],
       fill_value='?',
            dtype=object), 'param_nb__fit_prior': masked_array(data=[False],
             mask=[False],
       fill_value='?',
            dtype=object), 'params': [{'nb__alpha': 1.0, 'nb__fit_prior': False}], 'split0_test_score': array([0.66858153]), 'split1_test_score': array([0.66239505]), 'split2_test_score': array([0.66548829]), 'split3_test_score': array([0.6699072]), 'split4_test_score': array([0.67816092]), 'mean_test_score': array([0.6689066]), 'std_test_score': array([0.00530725]), 'rank_test_score': array([1]), 'split0_train_score': array([0.93205171]), 'split1_train_score': array([0.93072589]), 'split2_train_score': array([0.92973152]), 'split3_train_score': array([0.92796376]), 'split4_train_score': array([0.92830314]), 'mean_train_score': array([0.9297552]), 'std_train_score': array([0.00151885])}
Test accuracy: 0.6141795007966012
Classification report:               precision    recall  f1-score   support

           0       0.24      0.30      0.27       319
           1       0.59      0.63      0.61       389
           2       0.43      0.25      0.32       394
           3       0.52      0.68      0.59       392
           4       0.70      0.59      0.64       385
           5       0.68      0.72      0.70       395
           6       0.78      0.65      0.71       390
           7       0.76      0.64      0.69       396
           8       0.76      0.58      0.66       398
           9       0.88      0.73      0.80       397
          10       0.86      0.88      0.87       399
          11       0.55      0.72      0.62       396
          12       0.63      0.50      0.56       393
          13       0.70      0.70      0.70       396
          14       0.70      0.69      0.70       394
          15       0.43      0.89      0.58       398
          16       0.52      0.65      0.58       364
          17       0.68      0.74      0.71       376
          18       0.55      0.35      0.43       310
          19       0.28      0.04      0.08       251

    accuracy                           0.61      7532
   macro avg       0.61      0.60      0.59      7532
weighted avg       0.62      0.61      0.61      7532

Running time: 5.6347784996032715
-----------------------------------------
